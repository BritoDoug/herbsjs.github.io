(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{117:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return O}));var r=n(0),a=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,O=u["".concat(i,".").concat(d)]||u[d]||b[d]||s;return n?a.a.createElement(O,c(c({ref:t},l),{},{components:n})):a.a.createElement(O,c({ref:t},l))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=d;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<s;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),s=(n(0),n(117)),i={id:"steps",title:"Steps",sidebar_label:"Steps",slug:"/usecase/steps"},c={unversionedId:"usecase/steps",id:"usecase/steps",isDocsHomePage:!1,title:"Steps",description:"Steps are the building blocks of a use case. Its main goal is to generate metadata before and during the execution of a use case like the code intention, audit trail, etc.",source:"@site/docs/usecase/steps.md",slug:"/usecase/steps",permalink:"/docs/usecase/steps",editUrl:"https://github.com/herbsjs/herbsjs.github.io/docs/usecase/steps.md",version:"current",sidebar_label:"Steps",sidebar:"sidebar",previous:{title:"Features",permalink:"/docs/usecase/features"},next:{title:"Result",permalink:"/docs/usecase/result"}},o=[{value:"The Basics",id:"the-basics",children:[]},{value:"Nested Steps",id:"nested-steps",children:[]},{value:"If / Then / Else",id:"if--then--else",children:[]},{value:"Step Context (ctx)",id:"step-context-ctx",children:[]},{value:"Step Result",id:"step-result",children:[]}],l={toc:o};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Steps are the building blocks of a use case. Its main goal is to generate metadata before and during the execution of a use case like the code intention, audit trail, etc."),Object(s.b)("h2",{id:"the-basics"},"The Basics"),Object(s.b)("p",null,"To create a step inside a use case is simple:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},"Define your step intention. ")),Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},"Wrap your code with the ",Object(s.b)("inlineCode",{parentName:"p"},"step")," function passing the ",Object(s.b)("inlineCode",{parentName:"p"},"ctx")," argument. ")),Object(s.b)("li",{parentName:"ol"},Object(s.b)("p",{parentName:"li"},"Don't forget to return the ",Object(s.b)("a",{parentName:"p",href:"/docs/usecase/result"},"result"),"."))),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const { Ok, Err, usecase, step } = require('buchu')\n\nconst createProduct = injection =>\n    usecase('Create Product', {\n\n        'Check if the Product is valid': step(ctx => {\n            return Ok() \n        }),\n        ...\n")),Object(s.b)("p",null,"We think a code must define its ",Object(s.b)("a",{parentName:"p",href:"/docs/introduction/motivation#code-intention"},"intention")," to make it easier to read as well as changing it."),Object(s.b)("p",null,"So, the first thing to note is that we encourage the description of the steps with the business intent (never the technical intent)."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Good descriptions:")),Object(s.b)("p",null,"\u2705 Check if the Product is valid"),Object(s.b)("p",null,"\u2705 Retrieve all Users from repository"),Object(s.b)("p",null,"\u2705 Calculate Customer position on the Queue"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Bad descriptions:")),Object(s.b)("p",null,"\u274c Select rows from MySQL"),Object(s.b)("p",null,"\u274c getAllUsers"),Object(s.b)("p",null,"\u274c Calc Position"),Object(s.b)("h2",{id:"nested-steps"},"Nested Steps"),Object(s.b)("p",null,"It is possible to break your step into smaller steps using nested steps."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const createProduct = injection =>\n    usecase('Create Product', {\n\n        'Check if the Product is valid': step({\n\n            'Validate Product origin': step(ctx => { \n                return Ok() \n            }),\n\n            'Validate Product information': step(ctx => { \n                return Ok() \n            }),\n            ...\n        }),\n")),Object(s.b)("h2",{id:"if--then--else"},"If / Then / Else"),Object(s.b)("p",null,"With ",Object(s.b)("inlineCode",{parentName:"p"},"ifElse")," step it is possible create a conditional flow for a use case. "),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"'[conditional flow description]': ifElse({\n\n    '[if description]': step(ctx => {\n        return Ok(conditional) // true or false\n    }),\n\n    '[then description]': step(ctx => {\n        ...\n        return Ok()\n    }),\n\n    '[else description]': step(ctx => {\n        ...\n        return Ok()\n    }),\n}),\n\n")),Object(s.b)("p",null,"For example:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const { Ok, Err, usecase, step, ifElse } = require('buchu')\n\nconst updateItem = (injection) =>\n  usecase('Update Task', {\n\n    ...\n    \n    'Check if is necessary to update Task positions': ifElse({\n\n      'If position has changed': step(ctx => {\n        return Ok(ctx.hasChangedPosition) // true or false\n      }),\n\n      'Then rearrange positions and save Tasks on repository': step(async ctx => {\n        ...\n        return Ok()\n      }),\n\n      'Else save updated Task on repository': step(async ctx => {\n        ...\n        return Ok()\n      }),\n\n    }),\n\n")),Object(s.b)("h2",{id:"step-context-ctx"},"Step Context (ctx)"),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"ctx")," variable is used to access (read and write) the state of the use case and its steps during its execution."),Object(s.b)("p",null,"For instance, to read and write a variable across multiple steps:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const updateList = injection =>\n    usecase('Update User', {\n\n        'Retrieve User from repository': step(async ctx => {\n            ...\n            ctx.user = await repo.findByID(...) // create `user` variable\n        }),\n\n        'Update User on repository': step(ctx => {\n            const user = ctx.user // read `user` variable\n            ...\n        }),\n    })\n")),Object(s.b)("p",null,"There are a few reserved variables inside ",Object(s.b)("inlineCode",{parentName:"p"},"ctx"),":"),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"ctx.req")," - Contains the use case request payload. Declared when running a use case."),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"ctx.ret")," - Defines the use case result value."),Object(s.b)("h2",{id:"step-result"},"Step Result"),Object(s.b)("p",null,"The result (",Object(s.b)("inlineCode",{parentName:"p"},"Ok")," or ",Object(s.b)("inlineCode",{parentName:"p"},"Err"),") of a step is defined by the function returns. "),Object(s.b)("p",null,"For exambple, ",Object(s.b)("inlineCode",{parentName:"p"},"Ok")," with value:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"    usecase('Create Product', {\n\n        'Check if the Product is valid': step(ctx => {\n            return Ok(isProductValid) \n        }),\n        ...\n")),Object(s.b)("p",null,"The use case will stop its execution if the result of a step is ",Object(s.b)("inlineCode",{parentName:"p"},"Err"),"."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"    usecase('Create Product', {\n\n        'Check if the Product is valid': step(ctx => {\n            if (!isProductValid) return Err(whyIsNotValid) // stop here\n            return Ok(isProductValid)  // next step\n        }),\n        ...\n")),Object(s.b)("p",null,"If defined, like the example above, the value of the result will be audited."),Object(s.b)("p",null,"The default result is ",Object(s.b)("inlineCode",{parentName:"p"},"Ok")," if no explicit result is returned."))}p.isMDXComponent=!0}}]);